// <auto-generated />
using ABCD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABCD.Data.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    [Migration("20241218020705_01")]
    partial class _01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ABCD.Core.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs", (string)null);
                });

            modelBuilder.Entity("ABCD.Core.BlogDomain", b =>
                {
                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Domain")
                        .HasMaxLength(253)
                        .HasColumnType("nvarchar(253)");

                    b.HasKey("BlogId", "Domain");

                    b.ToTable("BlogDomains", (string)null);
                });

            modelBuilder.Entity("ABCD.Core.BlogDomain", b =>
                {
                    b.HasOne("ABCD.Core.Blog", "Blog")
                        .WithMany("Domains")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("ABCD.Core.Blog", b =>
                {
                    b.Navigation("Domains");
                });
#pragma warning restore 612, 618
        }
    }
}
